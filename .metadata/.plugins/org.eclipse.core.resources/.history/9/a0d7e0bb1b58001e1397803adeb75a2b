<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

	<link rel="stylesheet" href="/resources/css/main.css">
	
	<title>To do List</title>
</head>
<body>
	
    <main>
    
    	<c:choose>
    		<%-- 로그인을 하지 않았다면 --%>
    		<c:when test="${empty sessionScope.loginMember}">
    			
                <h1>투 두 리스트 로그인</h1>

                <form action="/login" method="post" class="login-form">
                    <div>
                        <p>아이디</p>
                        <input type="text" name="inputId">
                    </div>
                    <div>
                        <p>패스워드</p>
                        <input type="password" name="inputPw">
                    </div>

                    <button>로그인</button>
                </form>
    		</c:when>
    		
    		<%-- 로그인을 했다면 --%>
    		<c:otherwise>
    			
    			<h1>${sessionScope.loginMember.memberNickname}의 투 두 리스트</h1>
		
				<c:choose>
					<c:when test="${empty todoList}">
						<h2>할 일이 하나도 없네요!</h2>
					</c:when>
					
					<c:otherwise>
						<table>
							<c:forEach var="todo" items="${todoList}">
		                       	<tr>
									<td>${todo.todoTitle}</td>
									<td>(${todo.todoMemo})</td>
									<td>${todo.todoDate}</td>
									<td><button type="button" onClick="deleteTodo(${todo.todoNo})">삭제</button></td>
								</tr>
							</c:forEach>
						</table>
					</c:otherwise>
				</c:choose>
				
                <div class="button-div">
                    <a href="/insert" class="insert-btn">등록하기</a>
                    <a href="/logout" class="logout-btn">로그아웃</a>
                </div>
                
    		</c:otherwise>
    	</c:choose>
   
		
    </main>
    
    
	<%-- session에 message가 존재할 경우 --%>
	<%-- not empty : 비어있지 않을 경우 true --%>
	<c:if test="${not empty sessionScope.message}">
	
	    <script>
	        // EL/JSTL 구문이 먼저 해석되는데
	        // 문자열의 경우 따옴표가 없는 상태이니 붙여줘야한다!!!
	        alert('${message}');
	    </script>
	
	    <%-- 
	        session에 message를 추가하면
	        브라우저 종료 또는 만료 전까지 계속 메시지가 출력된다
	        -> 1회 출력 후 session에서 message 삭제
	    --%>
	    <c:remove var="message" scope="session"/>
	
	</c:if>
	
	
	<script>
		/*
		Ajax : Asynchronous JavaScript And XML의 약자이며,
		클라이언트와 서버 간의 데이터를 주고받기 위해 비동기 HTTP 통신을 하게 될 때 사용함
		자바스크립트를 이용해서 비동기적(Asynchronous)으로 서버와 브라우저가 데이터를 교환할 수 있는 통신 방식을 의미함.
		서버로부터 웹페이지가 반환되면 화면 전체를 갱신해야 하는데 
		페이지 일부만을 갱신하고도 동일한 효과를 볼 수 있도록 하는 것이 Ajax. 
		
		JSON : 클라이언트와 서버 간에는 데이터 교환이 필요함 
		JSON(JavaScript Object Notation)은 클라이언트와 서버 간 데이터 교환을 위한 규칙임
		JSON은 일반 텍스트 포맷보다 효과적인 데이터 구조화가 가능하며 XML 포맷보다 가볍고 사용하기 간편하며 가독성도 좋음
		- JSON.stringify : 객체를 JSON 형식의 문자열로 변환.
		- JSON.parse : JSON 데이터를 가진 문자열을 객체로 변환.
		
		- 서버로부터 브라우저로 전송된 JSON 데이터는 문자열이다. 
		이 문자열을 객체로서 사용하려면 객체화하여야 하는데 이를 역직렬화(Deserializing)이라 한다. 
		역직렬화를 위해서 내장 객체 JSON의 static 메소드인 JSON.parse를 사용한다.
		*/
	
		function deleteTodo(todoNo) {
			// 브라우저는 XMLHttpRequest 객체를 이용하여 Ajax 요청을 생성하고 전송한다. 
			// 서버가 브라우저의 요청에 대해 응답을 반환하면 같은 XMLHttpRequest 객체가 그 결과를 처리한다.
			// -> 복잡하고 사용하기 어렵다
			// -> jQuery를 이용하여 ajax사용하자

			$.ajax({
				type : 'GET',
				url : '/deleteTodo',
				data : { "todoNo" : todoNo },
				success : function(result) {
					console.log(result);
				}
			})
			

		} 
	</script>
    
	<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
</body>
</html>